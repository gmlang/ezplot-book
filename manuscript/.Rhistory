sessionInfo()
library(rvest)
lego_movie = html("http://www.imdb.com/title/tt1490017/")
lego_movie %>% html_nodes("strong span")
jap0 = html("http://tcc.nifty.com/cs/catalog/tcc_schedule/1.htm", encoding="UTF-8")
jap0
setClass('myDate')
setAs("character", "myDate", function(from) as.Date(from, format="%m/%d/%Y"))
qqq = read.csv('qqq.csv', header=T, colClasses=c("myDate", NA, NA))
library(formatR)
tidy_source(textConnection("x = 1:5"), arrow = TRUE)
sessionInfo()
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
summary = function(x) {
funs = c(mean, median, sd, mad, IQR)
lapply(funs, function(f) f(x, na.rm = TRUE))
}
lapply(df, summary)
?replicate
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
df
?rnorm
set.seed(10147238)
df <- data.frame(replicate(6, sample(1:50, 5)))
df
summary = function(x) {
funs = c(mean, median, sd, mad, IQR)
lapply(funs, function(f) f(x, na.rm = TRUE))
}
lapply(df, summary)
set.seed(10147238)
df <- data.frame(replicate(3, sample(1:50, 6)))
df
summary = function(x) {
funs = c(mean, median, sd, mad, IQR)
lapply(funs, function(f) f(x, na.rm = TRUE))
}
lapply(df, summary)
sapply(df, summary)
str(sapply(df, summary))
lst = lapply(df, summary)
out_lst = lapply(df, summary)
do.call(out_lst, "rbind")
do.call("rbind", out_lst)
do.call("cbind", out_lst)
out_lst = sapply(df, summary)
data.frame(out_lst)
row.names(out) = c("mean", "median", "sd", "mad", "IQR")
out = data.frame(out_lst)
row.names(out) = c("mean", "median", "sd", "mad", "IQR")
out
summary = function(x) {
# Calculate summary statistics of a numeric vector.
#
# Args:
#       x: a numeric vector
# Returns:
#       a list of summary statistics functions with x as input
# collect a bunch of functions for calculating summary stats into a vector
funs = c(min, max, mean, median, sd, mad, IQR)
# feed x to each function and collect the resulting functions into a list
lapply(funs, function(f) f(x, na.rm = TRUE))
}
str(summary)
summ_stats = function(x) {
# Calculate summary statistics of a numeric vector.
#
# Args:
#       x: a numeric vector
# Returns:
#       a list of summary statistics functions with x as input
# collect a bunch of functions for calculating summary stats into a vector
funs = c(min, max, mean, median, sd, mad, IQR)
# feed x to each function and collect the resulting functions into a list
lapply(funs, function(f) f(x, na.rm = TRUE))
}
str(summ_stats)
?summary
set.seed(10147238)
df = data.frame(replicate(3, sample(1:50, 6)))
df
summ_stats = function(x) {
# Calculate summary statistics of a numeric vector.
#
# Args:
#       x: a numeric vector
# Returns:
#       a list of summary statistics functions with x as input
# collect a bunch of functions for calculating summary stats into a vector
funs = c(min, max, mean, median, sd, mad, IQR)
# feed x to each function and collect the resulting functions into a list
lapply(funs, function(f) f(x, na.rm = TRUE))
}
str(summ_stats)
?mad
?IQR
?sapply
out_lst = lapply(df, summ_stats)
out = data.frame(out_lst)
row.names(out) = c("mean", "median", "sd", "mad", "IQR")
out
odbcDataSources()
library(RODBC)
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "02-plot-a-con-var-4-in-1.Rmd")
knitr::knit(file_in)
?films
file_in = file.path(rmd_path, "02-plot-a-con-var-4-in-1.Rmd")
knitr::knit(file_in)
?knit
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "02-plot-a-con-var-4-in-1.Rmd")
knitr::knit(file_in)
