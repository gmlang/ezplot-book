sessionInfo()
trans = list(
disp = function(x) x * 0.0163871,
am = function(x) factor(x, levels = c("auto", "manual"))
)
names(trans)
for(var in names(trans)) {
mtcars[[var]] <- trans[[var]](mtcars[[var]])
}
str(mtcars)
missing_fixer = function(na_value) {
function(x) {
x[x == na_value] = NA
x
}
}
fix_missing_99 = missing_fixer(-99)
fix_missing_999 = missing_fixer(-999)
fix_missing_99(c(-99, -999))
fix_missing_999(c(-99, -999))
poisson_nll = function(x) {
n = length(x)
sum_x = sum(x)
function(lambda) {
n * lambda - sum_x * log(lambda)
}
}
x1 = c(41, 30, 31, 38, 29, 24, 30, 29, 31, 38)
x2 = c(6, 4, 7, 3, 3, 7, 5, 2, 2, 7, 5, 4, 12, 6, 9)
nll1 = poisson_nll(x1)
nll2 = poisson_nll(x2)
optimise(nll1, c(0, 100))$minimum
optimise(nll2, c(0, 100))$minimum
arg_func = function(func) {
function(x, f) {
fvals = vapply(x, f, numeric(1))
x[fvals == func(fvals)]
}
}
arg_max = arg_func(max)
arg_min = arg_func(min)
arg_max(-10:5, function(x) x ^ 2)
arg_max(-5:5, function(x) x ^ 2)
arg_min(-10:5, function(x) x ^ 2)
arg_max(-5:5, function(x) x ^ 2)
arg_min(-5:5, function(x) x ^ 2)
?vapply
arg_min = arg_func(min)
arg_min(-10:5, function(x) x ^ 2)
arg_min(-5:5, function(x) x ^ 2)
arg_med = arg_func(median)
arg_med(-10:5, function(x) x ^ 2)
arg_med(-5:5, function(x) x ^ 2)
arg_mean = arg_func(mean)
arg_mean(-10:5, function(x) x ^ 2)
arg_mean(-5:5, function(x) x ^ 2)
?mk_distplot()
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 6, fig.height = 6,
dev = 'png') # don't use fig.align, it forces html code for img
options(width = 100, scipen = 5, digits = 5)
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "03-02-densityplot.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
library(ezplot)
?mk_distplot()
plt = mk_distplot(films)
title = "Distribution of Film Lengths"
p = plt("length", xlab="minutes", type="density", main=title, add_vline_median=T)
# use comma scale for y-axis
p = scale_axis(p, "y", scale="comma")
print(p)
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
# use comma scale for y-axis
p = scale_axis(p, "y", scale="comma")
print(p)
plt = mk_distplot(films)
title = "Distribution of Film Lengths"
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
?mk_distplot
print(p)
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T)
print(p)
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
str(films)
?mk_distplot()
str(films$made_money)
?films
str(films$made_money)
?mk_distplot()
p = plt("rating", fillby="made_money", binw=0.3,
xlab="Average IMDB User Rating", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("rating", fillby="made_money", binw=0.3,
xlab="Average IMDB User Rating", main=title)
print(p)
plt = mk_distplot(films)
p = plt("rating", fillby="made_money", binw=0.3,
xlab="Average IMDB User Rating", main=title)
print(p)
title = "Distribution of User's Average Ratings (1913-2014)"
p = plt("rating", fillby="made_money", binw=0.3,
xlab="Average IMDB User Rating", main=title)
print(p)
p = plt("rating", fillby="made_money", binw=0.3,
xlab="IMDB Users' Average Rating", main=title)
print(p)
table(films$made_money)
4113/1831
rm(list=ls())
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 10, fig.height = 10,
dev = 'png') # don't use fig.align, it forces html code for img
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 8, fig.height = 8,
dev = 'png') # don't use fig.align, it forces html code for img
file_in = file.path(rmd_path, "02-plot-a-con-var-4-in-1.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 7, fig.height = 7,
dev = 'png') # don't use fig.align, it forces html code for img
file_in = file.path(rmd_path, "02-plot-a-con-var-4-in-1.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
9.4-0.8
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 7, fig.height = 7,
dev = 'png') # don't use fig.align, it forces html code for img
options(width = 100, scipen = 5, digits = 5)
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "03-02-densityplot.Rmd")
knitr::knit(file_in)
plt = mk_distplot(films)
title = "Distribution of Film Lengths"
p = plt("length", fillby="made_money", xlab="minutes", type="density",
main=title, add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("length", fillby="made_money", xlab="minutes", type="density",
main=title)
print(p)
file_in = file.path(rmd_path, "03-02-densityplot.Rmd")
knitr::knit(file_in)
red = cb_color("vermilion")
green = cb_color("bluish_green")
p = p + ggplot2::scale_fill_manual(values = c(red, green))
print(p)
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
red = cb_color("vermilion")
green = cb_color("bluish_green")
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
f = mk_distplot(iris)
red = cb_color("vermilion")
green = cb_color("bluish_green")
blue = cb_color("blue")
f("Sepal.Length", fillby="Species", binw=0.3, add_vline_mean=T) +
ggplot2::scale_fill_manual(values = c(red, green, blue))
plt = mk_distplot(films)
title = "Distribution of Film Length"
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("length", fillby="made_money", xlab="minutes", type="density",
main=title)
print(p)
?cb_color
red = cb_color("reddish_purple")
green = cb_color("sky_blue")
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
?mk_distplot
red = cb_color("reddish_purple")
green = cb_color("bluish_green")
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
plt = mk_distplot(films)
title = "Distribution of Film Length"
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
?mk_distplot
draw = function(type) {
# code string for histogram
hist_code = 'if (fillby == "") {
p = p + ggplot2::geom_histogram(fill = cb_color("sky_blue"), alpha=.5, binwidth=binw, position="identity")
} else {
p = p + ggplot2::geom_histogram(ggplot2::aes_string(fill=fillby), alpha=.5, binwidth=binw, position="identity")
}'
# code string for density
density_code = 'if (fillby == "") {
p = p + ggplot2::geom_density(color = cb_color("blue"), alpha=.3, size=1)
} else {
p = p + ggplot2::geom_density(ggplot2::aes_string(color=fillby), alpha=.3, size=1)
}'
switch(type,
histogram = parse(text = hist_code),
density = parse(text = density_code))
}
#' @title Create a function that draws ggplot2 histograms or density plots.
#'
#' @description
#' \code{mk_distplot} takes a data frame as input and returns a function that can
#' be used to make histograms or density plots using variables in the data frame.
#' It uses \code{draw} as a helper.
#'
#' @seealso \code{\link{draw}}.
#'
#' @param df A data frame.
#' @return
#' \code{function(xvar, fillby="", xlab="", type="histogram", binw=NULL, main="",
#'                add_vline_mean=FALSE, add_vline_median=FALSE)}
#' \itemize{
#'      \item xvar     :  string, x variable.
#'      \item fillby   :  string, grouping variable. Default = "".
#'      \item xlab     :  stirng, x-axis label.
#'      \item type     :  string, "density" or "histogram". Default is "histogram".
#'      \item binw     :  number, bin width. Default = NULL.
#'      \item main     :  string, title of the plot.
#'      \item add_vline_mean: logical, whether to add a vertical line at the mean. Default=FALSE.
#'      \item add_vline_median: logical, whether to add a vertical line at the median. Default=FALSE.
#' }
#' @export
#' @examples
#' f = mk_distplot(iris)
#' f("Sepal.Length")
#' f("Sepal.Length", binw=0.3)
#' f("Sepal.Length", binw=0.3, add_vline_mean=T)
#' f("Sepal.Length", binw=0.3, add_vline_median=T)
#' f("Sepal.Length", binw=0.3, add_vline_mean=T, add_vline_median=T)
#'
#' f("Sepal.Length", type="density")
#' f("Sepal.Length", type="density", add_vline_mean=T)
#' f("Sepal.Length", type="density", add_vline_median=T)
#' f("Sepal.Length", type="density", add_vline_median=T, add_vline_mean=T)
#'
#' f("Sepal.Length", fillby="Species")
#' f("Sepal.Length", fillby="Species", binw=0.3)
#' f("Sepal.Length", fillby="Species", binw=0.3, add_vline_mean=T)
#' f("Sepal.Length", fillby="Species", binw=0.3, add_vline_median=T)
#' f("Sepal.Length", fillby="Species", type="density")
#' f("Sepal.Length", fillby="Species", type="density", add_vline_mean=T)
#' f("Sepal.Length", fillby="Species", type="density", add_vline_median=T)
mk_distplot = function(df) {
function(xvar, fillby="", xlab="", type="histogram", binw=NULL, main="",
add_vline_mean=F, add_vline_median=F) {
p = ggplot2::ggplot(df, ggplot2::aes_string(x = xvar)) +
ggplot2::labs(x = xlab, title = main) +
ggplot2::theme_bw()
# draw histogram or density plot depending on the value of type
pexpr = draw(type)
p = eval(pexpr)
# add vline at the mean or median
if (fillby == "") {
# add vline at the mean
if (add_vline_mean) {
avg = mean(df[[xvar]], na.rm=T)
p = p + ggplot2::geom_vline(ggplot2::aes_string(xintercept = avg),
color = cb_color("reddish_purple"), size = 1,
linetype = "dashed")
}
# add vline at the median
if (add_vline_median) {
med = median(df[[xvar]], na.rm=T)
p = p + ggplot2::geom_vline(ggplot2::aes_string(xintercept = med),
color = cb_color("bluish_green"), size = 1,
linetype = "dashed")
}
} else {
lst = split(df[,c(xvar, fillby)], df[[fillby]])
# add vline at the mean
if (add_vline_mean) {
avg = sapply(lst, function(elt) mean(elt[[xvar]], na.rm=T))
means = data.frame(level=names(avg), avg)
p = p + ggplot2::geom_vline(data=means,
ggplot2::aes(xintercept = avg, color=level),
linetype = "dashed", size=1)
}
# add vline at the median
if (add_vline_median) {
med = sapply(lst, function(elt) median(elt[[xvar]], na.rm=T))
medians = data.frame(level=names(med), med)
p = p + ggplot2::geom_vline(data=medians,
ggplot2::aes(xintercept = med, color=level),
linetype = "dashed", size=1)
}
}
p
}
}
red = cb_color("vermilion")
green = cb_color("bluish_green")
blue = cb_color("blue")
f("Sepal.Length", fillby="Species", binw=0.3, add_vline_mean=T) +
ggplot2::scale_fill_manual(values = c(red, green, blue))
red = cb_color("reddish_purple")
green = cb_color("bluish_green")
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
plt = mk_distplot(films)
title = "Distribution of Film Length"
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("length", fillby="made_money", xlab="minutes", type="density",
main=title)
print(p)
library(devtools)
home_path = Sys.getenv("HOME")
proj_path = file.path(home_path, "Rpkg")
setwd(file.path(proj_path, "ezplot"))
document()
install.packages("/Users/gmlang/Rpkg/ezplot", repos=NULL, type="source")
library(ezplot)
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 7, fig.height = 7,
dev = 'png') # don't use fig.align, it forces html code for img
options(width = 100, scipen = 5, digits = 5)
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
plt = mk_distplot(films)
title = "Distribution of Film Length"
p = plt("length", xlab="minutes", type="density", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("length", fillby="made_money", xlab="minutes", type="density",
main=title)
print(p)
red = cb_color("reddish_purple")
green = cb_color("bluish_green")
p = p + ggplot2::scale_color_manual(values = c(red, green))
print(p)
plt = mk_distplot(films)
title = "Distribution of Users' Average Ratings (1913-2014)"
p = plt("rating", binw=0.3, xlab="IMDB Users' Average Rating", main=title,
add_vline_mean=T)
print(p)
p = plt("rating", binw=0.3, xlab="IMDB Users' Average Rating", main=title,
add_vline_mean=T, add_vline_median=T)
print(p)
p = plt("rating", fillby="made_money", binw=0.3,
xlab="IMDB Users' Average Rating", main=title)
print(p)
?cb_color
red = cb_color("reddish_purple")
green = cb_color("bluish_green")
p = p + ggplot2::scale_fill_manual(values = c(red, green))
print(p)
file_in = file.path(rmd_path, "03-01-histogram.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-02-densityplot.Rmd")
knitr::knit(file_in)
file_in = file.path(rmd_path, "03-02-densityplot.Rmd")
knitr::knit(file_in)
1200 * 0.9 / 2
2015-1998
