library(ezplot)
library(tidyr)
films %>% group_by(year_cat)
library(dplyr)
dat = films %>% group_by(year_cat)
str(dat)
dat = films %>% select(year_cat, budget) %>% group_by(year_cat)
str(dat)
head(dat)
dat = films %>% select(year_cat, budget) %>% group_by(year_cat) %>%
summarise(mid = median(budget), lwr = min(budget), upr = max(budget))
dat
plt = mk_boxplot(dat)
p = plt(xvar="year_cat", yvar="mid", ymin_var="lwr", ymax_var="upr",
ylab="budget ($)", main=title)
plt = mk_boxplot(dat)
title = "Budget Range from 1913 to 2014"
plt = mk_intervalplot(dat)
title = "Budget Range from 1913 to 2014"
p = plt(xvar="year_cat", yvar="mid", ymin_var="lwr", ymax_var="upr",
ylab="budget ($)", main=title)
scale_axis(p, scale = "log10")
dat
dat = films %>% select(year_cat, budget) %>% group_by(year_cat) %>%
summarise(med = median(budget), lwr = min(budget), upr = max(budget))
dat
plt = mk_intervalplot(dat)
title = "Budget Range from 1913 to 2014"
p = plt(xvar="year_cat", yvar="med", ymin_var="lwr", ymax_var="upr",
ylab="budget ($)", main=title)
scale_axis(p, scale = "log10")
fit = lm(log10(boxoffice) ~ year_cat, data=films)
fit = lm(log10(boxoffice) ~ year_cat, data=films)
# obtain the fitted values and their prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = data.frame(year_cat=films$year_cat, pred)
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="budget ($)", main=title)
p
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="budget prediction ($)", main="Budget Prediction Using year_cat")
p
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="budget prediction ($)",
main="Budget Prediction Using year_cat")
p
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
fit = lm(log10(boxoffice) ~ log10(budget) + year_cat, data=films)
pred = predict(fit, films, interval="prediction")
dat = data.frame(year_cat=films$year_cat, pred)
dat = data.frame(year_cat=films$year_cat, budget=films$budget, pred)
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
str(dat)
plt = mk_intervalplot(dat)
p = plt("budget", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
p = plt("budget", "fit", fillby="year_cat", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
scale_axis(p, axis="x", scale = "log10")
fit = lm(log10(boxoffice) ~ log10(budget) + drama, data=films)
pred = predict(fit, films, interval="prediction")
dat = data.frame(year_cat=films$year_cat, budget=films$budget, pred)
dat = data.frame(drama=films$drama, budget=films$budget, pred)
str(dat)
plt = mk_intervalplot(dat)
p = plt("budget", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
scale_axis(p, axis="x", scale = "log10")
fit = lm(log10(boxoffice) ~ log10(budget) + year_cat, data=films)
pred = predict(fit, films, interval="prediction")
dat = data.frame(year_cat=films$year_cat, budget=films$budget, pred)
str(dat)
dat = films[c("budget", "year_cat", "drama")]
str(dat)
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
str(dat)
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
scale_axis(p, axis="x", scale = "log10")
p = plt("year_cat", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
p = plt("drama", "fit", fillby="", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
p = plt("budget", "fit", fillby="", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
p = plt("budget", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
scale_axis(p, axis="x", scale = "log10")
fit = lm(log10(boxoffice) ~ log10(budget), data=films)
# obtain the fitted values and their 95% prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
plt = mk_intervalplot(dat)
p = plt("budget", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p = scale_axis(p, axis="x", scale = "log10")
p
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_fill_manual(values = c(green, purple))
print(p)
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
print(p)
fit = lm(log10(boxoffice) ~ year_cat, data=films)
# obtain the fitted values and their 95% prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = data.frame(year_cat=films$year_cat, pred)
# make interval plot
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
fit = lm(log10(boxoffice) ~ log10(budget) + year, data=films)
pred = predict(fit, films, interval="prediction")
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
str(dat)
plt = mk_intervalplot(dat)
p = plt("budget", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p = scale_axis(p, axis="x", scale = "log10")
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
print(p)
p = plt("year_cat", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p = scale_axis(p, axis="x", scale = "log10")
# color
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", fillby="drama", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
# p = scale_axis(p, axis="x", scale = "log10")
# color
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
fit = lm(log10(boxoffice) ~ log10(budget) + year, data=films)
# obtain the fitted values and their 95% prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
str(dat)
plt = mk_intervalplot(dat)
p = plt("drama", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
# p = scale_axis(p, axis="x", scale = "log10")
# color
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
fit = lm(log10(boxoffice) ~ log10(budget) + year + drama, data=films)
# obtain the fitted values and their 95% prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
str(dat)
# make interval plot
plt = mk_intervalplot(dat)
p = plt("drama", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
# p = scale_axis(p, axis="x", scale = "log10")
# color
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
fit = lm(log10(boxoffice) ~ drama, data=films)
# obtain the fitted values and their 95% prediction intervals
pred = predict(fit, films, interval="prediction")
# make data frame for plotting
dat = cbind(films[c("budget", "year_cat", "drama")], pred)
str(dat)
plt = mk_intervalplot(dat)
p = plt("drama", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
# p = scale_axis(p, axis="x", scale = "log10")
# color
green = cb_color("bluish_green")
purple = cb_color("reddish_purple")
p = p + ggplot2::scale_color_manual(values = c(green, purple))
print(p)
fit = lm(log10(boxoffice) ~ year_cat, data=films)
pred = predict(fit, films, interval="confidence")
dat = data.frame(year_cat=films$year_cat, pred)
plt = mk_intervalplot(dat)
p = plt("year_cat", "fit", ymin_var="lwr", ymax_var="upr",
ylab="predicted log10(budget) ($)",
main="Budget Prediction Using year_cat")
p
rm(list=ls())
library(knitr)
opts_knit$set(out.format = "markdown")
opts_chunk$set(comment = "", warning = FALSE, message = FALSE, tidy = FALSE,
echo = TRUE, fig.path='images/', fig.width = 7, fig.height = 7,
dev = 'png') # don't use fig.align, it forces html code for img
options(width = 100, scipen = 5, digits = 5)
# set paths
proj_path = "~/write/ezplot-book"
manu_path = file.path(proj_path, "manuscript")
setwd(manu_path)
rmd_path = file.path(manu_path, "Rmd")
file_in = file.path(rmd_path, "03-04-intervalplot.Rmd")
knitr::knit(file_in)
?merge
